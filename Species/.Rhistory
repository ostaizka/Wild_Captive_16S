n_wild <- nrow(divq0_wild)
mean_wild <- mean(divq0_wild[,c("Value")])
sd_wild <- sd(divq0_wild[,c("Value")])
divq0_captive <- divq0_table[divq0_table$Group == "Captivity",]
n_captive <- nrow(divq0_captive)
mean_captive <- mean(divq0_captive[,c("Value")])
sd_captive <- sd(divq0_captive[,c("Value")])
summary_q0 <- rbind(summary_q0,c(n_wild,mean_wild,sd_wild,n_captive,mean_captive,sd_captive))
}
code=CHMY
code="CHMY"
setwd("~/reanalysis/Species")
files.g = list.files(path=code, pattern="*.tax_genus.txt")
names.g = gsub(".tax_genus.txt","",files.g)
filelist.g = lapply(paste(code,files.g,sep="/"), function(x)read.table(x, header=T,sep="\t"))
#Note some erroneous files can prevent all files from loading (remove erroneous ones)
#Transform list to matrix
filelist.g %>% purrr::reduce(full_join, by = "Taxa") -> count.table.g
rownames(count.table.g) <- count.table.g[,1]
count.table.g <- count.table.g[,-1]
#Name columns
colnames(count.table.g) <- names.g
#Replace NAs by 0s
count.table.g[is.na(count.table.g)] <- 0
write.table(count.table.g, paste("/Users/ostaizka/reanalysis/table/count_genus_",code,".tsv",sep=""))
}
files.p = list.files(path=code, pattern="*.tax_phylum.txt")
names.p = gsub(".tax_phylum.txt","",files.p)
filelist.p = lapply(paste(code,files.p,sep="/"), function(x)read.table(x, header=T,sep="\t"))
#Note some erroneous files can prevent all files from loading (remove erroneous ones)
#Transform list to matrix
filelist.p %>% purrr::reduce(full_join, by = "Taxa") -> count.table.p
rownames(count.table.p) <- count.table.p[,1]
count.table.p <- count.table.p[,-1]
#Name columns
colnames(count.table.p) <- names.p
#Replace NAs by 0s
count.table.p[is.na(count.table.p)] <- 0
write.table(count.table.p, paste("/Users/ostaizka/reanalysis/table/count_phylum_",code,".tsv",sep=""))
counts.filtdepth <- depth_filt(get(paste("final.table.g.",code,sep="")),1000)
samples.kept <- colnames(counts.filtdepth)
filtered.g <- counts.filtdepth[rowSums(counts.filtdepth)>0, ]
assign(paste("filtered.g.",code,sep=""),get("filtered.g"))
write.table(get(paste("filtered.g.",code,sep="")),paste("/Users/ostaizka/reanalysis/table/countfiltered_Genus_",code,".tsv",sep=""))
final.table.p <- get(paste("final.table.p.",code,sep=""))
filtered.p <- final.table.p[,colnames(final.table.p) %in% samples.kept]
assign(paste("filtered.p.",code,sep=""),get("filtered.p"))
write.table(get(paste("filtered.p.",code,sep="")),paste("/Users/ostaizka/reanalysis/table/countfiltered_Phylum_",code,".tsv",sep=""))
final.table.g <- read.table(paste("/Users/ostaizka/reanalysis/table/count_genus_",code,".tsv",sep=""))
assign(paste("final.table.g.",code,sep=""),get("final.table.g"))
counts.filtdepth <- depth_filt(get(paste("final.table.g.",code,sep="")),1000)
samples.kept <- colnames(counts.filtdepth)
filtered.g <- counts.filtdepth[rowSums(counts.filtdepth)>0, ]
assign(paste("filtered.g.",code,sep=""),get("filtered.g"))
write.table(get(paste("filtered.g.",code,sep="")),paste("/Users/ostaizka/reanalysis/table/countfiltered_Genus_",code,".tsv",sep=""))
final.table.p <- get(paste("final.table.p.",code,sep=""))
filtered.p <- final.table.p[,colnames(final.table.p) %in% samples.kept]
assign(paste("filtered.p.",code,sep=""),get("filtered.p"))
write.table(get(paste("filtered.p.",code,sep="")),paste("/Users/ostaizka/reanalysis/table/countfiltered_Phylum_",code,".tsv",sep=""))
final.table.p <- read.table(paste("/Users/ostaizka/reanalysis/table/count_phylum_",code,".tsv",sep=""))
assign(paste("final.table.p.",code,sep=""),get("final.table.p"))
counts.filtdepth <- depth_filt(get(paste("final.table.g.",code,sep="")),1000)
samples.kept <- colnames(counts.filtdepth)
filtered.g <- counts.filtdepth[rowSums(counts.filtdepth)>0, ]
assign(paste("filtered.g.",code,sep=""),get("filtered.g"))
write.table(get(paste("filtered.g.",code,sep="")),paste("/Users/ostaizka/reanalysis/table/countfiltered_Genus_",code,".tsv",sep=""))
final.table.p <- get(paste("final.table.p.",code,sep=""))
filtered.p <- final.table.p[,colnames(final.table.p) %in% samples.kept]
assign(paste("filtered.p.",code,sep=""),get("filtered.p"))
write.table(get(paste("filtered.p.",code,sep="")),paste("/Users/ostaizka/reanalysis/table/countfiltered_Phylum_",code,".tsv",sep=""))
counts.filtdepth <- depth_filt(get(paste("final.table.g.",code,sep="")),1000)
samples.kept <- colnames(counts.filtdepth)
filtered.g <- counts.filtdepth[rowSums(counts.filtdepth)>0, ]
assign(paste("filtered.g.",code,sep=""),get("filtered.g"))
write.table(get(paste("filtered.g.",code,sep="")),paste("/Users/ostaizka/reanalysis/table/countfiltered_Genus_",code,".tsv",sep=""))
final.table.p <- get(paste("final.table.p.",code,sep=""))
filtered.p <- final.table.p[,colnames(final.table.p) %in% samples.kept]
assign(paste("filtered.p.",code,sep=""),get("filtered.p"))
write.table(get(paste("filtered.p.",code,sep="")),paste("/Users/ostaizka/reanalysis/table/countfiltered_Phylum_",code,".tsv",sep=""))
taxa = "Genus"
summary_q0 <- c()
for (code in code.list){
final.table <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(final.table)),]
divq0 <- div_test(final.table,qvalue=0,hierarchy=hierarchy[,c(1,5)])
divq0_table <- divq0$data
divq0_wild <- divq0_table[divq0_table$Group == "Wild",]
n_wild <- nrow(divq0_wild)
mean_wild <- mean(divq0_wild[,c("Value")])
sd_wild <- sd(divq0_wild[,c("Value")])
divq0_captive <- divq0_table[divq0_table$Group == "Captivity",]
n_captive <- nrow(divq0_captive)
mean_captive <- mean(divq0_captive[,c("Value")])
sd_captive <- sd(divq0_captive[,c("Value")])
summary_q0 <- rbind(summary_q0,c(n_wild,mean_wild,sd_wild,n_captive,mean_captive,sd_captive))
}
colnames(summary_q0) <- c("n_wild", "mean_wild", "sd_wild","n_captive", "mean_captive", "sd_captive")
rownames(summary_q0) <- code.list
summary_q0
divq0_wild
divq0_captive
mean_captive
metadata$Origin <- gsub("Zoo","Captivity",metadata$Origin)
metadata$Origin <- gsub("Laboratory","Captivity",metadata$Origin)
metadata$Origin <- gsub("Domestic","Captivity",metadata$Origin)
taxa = "Genus"
summary_q0 <- c()
for (code in code.list){
final.table <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(final.table)),]
divq0 <- div_test(final.table,qvalue=0,hierarchy=hierarchy[,c(1,5)])
divq0_table <- divq0$data
divq0_wild <- divq0_table[divq0_table$Group == "Wild",]
n_wild <- nrow(divq0_wild)
mean_wild <- mean(divq0_wild[,c("Value")])
sd_wild <- sd(divq0_wild[,c("Value")])
divq0_captive <- divq0_table[divq0_table$Group == "Captivity",]
n_captive <- nrow(divq0_captive)
mean_captive <- mean(divq0_captive[,c("Value")])
sd_captive <- sd(divq0_captive[,c("Value")])
summary_q0 <- rbind(summary_q0,c(n_wild,mean_wild,sd_wild,n_captive,mean_captive,sd_captive))
}
colnames(summary_q0) <- c("n_wild", "mean_wild", "sd_wild","n_captive", "mean_captive", "sd_captive")
rownames(summary_q0) <- code.list
summary_q0
code="EQKI"
final.table <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(final.table)),]
divq0 <- div_test(final.table,qvalue=0,hierarchy=hierarchy[,c(1,5)])
divq0_table <- divq0$data
hierarchy
divq0$data
hierarchy_all <- tibble::rownames_to_column(metadata, "Samples")
taxa = "Genus"
summary_q0 <- c()
for (code in code.list){
final.table <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(final.table)),]
divq0 <- div_test(final.table,qvalue=0,hierarchy=hierarchy[,c(1,5)])
divq0_table <- divq0$data
divq0_wild <- divq0_table[divq0_table$Group == "Wild",]
n_wild <- nrow(divq0_wild)
mean_wild <- mean(divq0_wild[,c("Value")])
sd_wild <- sd(divq0_wild[,c("Value")])
divq0_captive <- divq0_table[divq0_table$Group == "Captivity",]
n_captive <- nrow(divq0_captive)
mean_captive <- mean(divq0_captive[,c("Value")])
sd_captive <- sd(divq0_captive[,c("Value")])
summary_q0 <- rbind(summary_q0,c(n_wild,mean_wild,sd_wild,n_captive,mean_captive,sd_captive))
}
colnames(summary_q0) <- c("n_wild", "mean_wild", "sd_wild","n_captive", "mean_captive", "sd_captive")
rownames(summary_q0) <- code.list
write.table(summary_q0, paste("~/reanalysis/Results/Diversity/",taxa,"/summaryq0_",taxa,".tsv",sep=""))
#q=1
summary_q1 <- c()
for (code in code.list){
final.table <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(final.table)),]
divq1 <- div_test(final.table,qvalue=1,hierarchy=hierarchy[,c(1,5)])
divq1_table <- divq1$data
divq1_wild <- divq1_table[divq1_table$Group == "Wild",]
n_wild <- nrow(divq1_wild)
mean_wild <- mean(divq1_wild[,c("Value")])
sd_wild <- sd(divq1_wild[,c("Value")])
divq1_captive <- divq1_table[divq1_table$Group == "Captivity",]
n_captive <- nrow(divq1_captive)
mean_captive <- mean(divq1_captive[,c("Value")])
sd_captive <- sd(divq1_captive[,c("Value")])
summary_q1 <- rbind(summary_q1,c(n_wild,mean_wild,sd_wild,n_captive,mean_captive,sd_captive))
}
summary_q1
colnames(summary_q1) <- c("n_wild", "mean_wild", "sd_wild","n_captive", "mean_captive", "sd_captive")
rownames(summary_q1) <- code.list
summary_q1
divq1$data
write.table(summary_q1, paste("~/reanalysis/Results/Diversity/",taxa,"/summaryq1_",taxa,".tsv",sep=""))
summary_q2 <- c()
for (code in code.list){
final.table <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(final.table)),]
divq2 <- div_test(final.table,qvalue=2,hierarchy=hierarchy[,c(1,5)])
divq2_table <- divq2$data
divq2_wild <- divq2_table[divq2_table$Group == "Wild",]
n_wild <- nrow(divq2_wild)
mean_wild <- mean(divq2_wild[,c("Value")])
sd_wild <- sd(divq2_wild[,c("Value")])
divq2_captive <- divq2_table[divq2_table$Group == "Captivity",]
n_captive <- nrow(divq2_captive)
mean_captive <- mean(divq2_captive[,c("Value")])
sd_captive <- sd(divq2_captive[,c("Value")])
summary_q2 <- rbind(summary_q2,c(n_wild,mean_wild,sd_wild,n_captive,mean_captive,sd_captive))
}
colnames(summary_q2) <- c("n_wild", "mean_wild", "sd_wild","n_captive", "mean_captive", "sd_captive")
rownames(summary_q2) <- code.list
summary_q2
summary_q0
summary_q0 <- as.data.frame(summary_q0)
meta_q0_ready <- tibble::rownames_to_column(summary_q0,"Author")
meta_q0.raw <- metacont(n_captive,mean_captive,sd_captive,n_wild,mean_wild,sd_wild,
data = meta_q0_ready,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ",
hakn = TRUE,
prediction = TRUE,
sm = "SMD",
)
pdf(paste("~/reanalysis/Results/Diversity/",taxa,"/forest_q0",taxa,".pdf",sep=""),width=11, height=6)
forest(meta_q0.raw,col.diamond = "blue",sortvar=TE,col.diamond.lines = "black",text.random = "Overall effect",
rightlabs = c("g","95% CI","Weight"),leftlabs = c("Species", "N","Mean","SD","N","Mean","SD"),
lab.e = "Captivity",lab.c="Wild")
dev.off()
saveRDS(meta_q0.raw,paste("/Users/ostaizka/reanalysis/Results/Diversity/",taxa,"/meta_q0_",taxa,".RData",sep=""))
#The box represents the effect size (in this case, OR) of each study.
#The bigger the box means the study weighted more (i.e., bigger sample size).
#The diamond shape represents the pooled OR of all studies. We can see the diamond cross the vertical line OR = 1, which indicates no significance for the association as the diamond almost equalized in both sides. We can confirm this also from the 95% confidence interval that includes one and the p value > 0.05.
#For heterogeneity, we see that I2 = 0%, which means no heterogeneity is detected; the study is relatively homogenous (it is rare in the real study). To evaluate publication bias related to the meta-analysis of adverse events of arthralgia, we can use the metabias function from the R meta package
#Check metaanalysis_example.R for editing
## Detecting outliers & influential cases
#library(dmetar)
#meta_q0.raw$lower.random
#meta_q0.raw$upper.random
#find.outliers(meta_q0.raw)
#q=1
summary_q1
summary_q1 <- as.data.frame(summary_q1)
meta_q1_ready <- tibble::rownames_to_column(summary_q1,"Author")
meta_q1.raw <- metacont(n_captive,mean_captive,sd_captive,n_wild,mean_wild,sd_wild,
data = meta_q1_ready,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ",
hakn = TRUE,
prediction = TRUE,
sm = "SMD")
pdf(paste("~/reanalysis/Results/Diversity/",taxa,"/forest_q1",taxa,".pdf",sep=""),width=11, height=6)
forest(meta_q1.raw,col.diamond = "blue",sortvar=TE,col.diamond.lines = "black",text.random = "Overall effect",
rightlabs = c("g","95% CI","Weight"),leftlabs = c("Species", "N","Mean","SD","N","Mean","SD"),
lab.e = "Captivity",lab.c="Wild")
dev.off()
saveRDS(meta_q1.raw,paste("/Users/ostaizka/reanalysis/Results/Diversity/",taxa,"/meta_q1_",taxa,".RData",sep=""))
#q=2
summary_q2
summary_q2 <- as.data.frame(summary_q2)
meta_q2_ready <- tibble::rownames_to_column(summary_q2,"Author")
meta_q2.raw <- metacont(n_captive,mean_captive,sd_captive,n_wild,mean_wild,sd_wild,
data = meta_q2_ready,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ",
hakn = TRUE,
prediction = TRUE,
sm = "SMD")
pdf(paste("~/reanalysis/Results/Diversity/",taxa,"/forest_q2",taxa,".pdf",sep=""),width=11, height=6)
forest(meta_q2.raw,col.diamond = "blue",sortvar=TE,col.diamond.lines = "black",text.random = "Overall effect",
rightlabs = c("g","95% CI","Weight"),leftlabs = c("Species", "N","Mean","SD","N","Mean","SD"),
lab.e = "Captivity",lab.c="Wild")
dev.off()
saveRDS(meta_q2.raw,paste("/Users/ostaizka/reanalysis/Results/Diversity/",taxa,"/meta_q2_",taxa,".RData",sep=""))
library(dmetar)
library(meta)
summary_q0 <- as.data.frame(summary_q0)
meta_q0_ready <- tibble::rownames_to_column(summary_q0,"Author")
meta_q0.raw <- metacont(n_captive,mean_captive,sd_captive,n_wild,mean_wild,sd_wild,
data = meta_q0_ready,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ",
hakn = TRUE,
prediction = TRUE,
sm = "SMD",
)
pdf(paste("~/reanalysis/Results/Diversity/",taxa,"/forest_q0",taxa,".pdf",sep=""),width=11, height=6)
forest(meta_q0.raw,col.diamond = "blue",sortvar=TE,col.diamond.lines = "black",text.random = "Overall effect",
rightlabs = c("g","95% CI","Weight"),leftlabs = c("Species", "N","Mean","SD","N","Mean","SD"),
lab.e = "Captivity",lab.c="Wild")
dev.off()
saveRDS(meta_q0.raw,paste("/Users/ostaizka/reanalysis/Results/Diversity/",taxa,"/meta_q0_",taxa,".RData",sep=""))
#The box represents the effect size (in this case, OR) of each study.
#The bigger the box means the study weighted more (i.e., bigger sample size).
#The diamond shape represents the pooled OR of all studies. We can see the diamond cross the vertical line OR = 1, which indicates no significance for the association as the diamond almost equalized in both sides. We can confirm this also from the 95% confidence interval that includes one and the p value > 0.05.
#For heterogeneity, we see that I2 = 0%, which means no heterogeneity is detected; the study is relatively homogenous (it is rare in the real study). To evaluate publication bias related to the meta-analysis of adverse events of arthralgia, we can use the metabias function from the R meta package
#Check metaanalysis_example.R for editing
## Detecting outliers & influential cases
#library(dmetar)
#meta_q0.raw$lower.random
#meta_q0.raw$upper.random
#find.outliers(meta_q0.raw)
#q=1
summary_q1
summary_q1 <- as.data.frame(summary_q1)
meta_q1_ready <- tibble::rownames_to_column(summary_q1,"Author")
meta_q1.raw <- metacont(n_captive,mean_captive,sd_captive,n_wild,mean_wild,sd_wild,
data = meta_q1_ready,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ",
hakn = TRUE,
prediction = TRUE,
sm = "SMD")
pdf(paste("~/reanalysis/Results/Diversity/",taxa,"/forest_q1",taxa,".pdf",sep=""),width=11, height=6)
forest(meta_q1.raw,col.diamond = "blue",sortvar=TE,col.diamond.lines = "black",text.random = "Overall effect",
rightlabs = c("g","95% CI","Weight"),leftlabs = c("Species", "N","Mean","SD","N","Mean","SD"),
lab.e = "Captivity",lab.c="Wild")
dev.off()
saveRDS(meta_q1.raw,paste("/Users/ostaizka/reanalysis/Results/Diversity/",taxa,"/meta_q1_",taxa,".RData",sep=""))
#q=2
summary_q2
summary_q2 <- as.data.frame(summary_q2)
meta_q2_ready <- tibble::rownames_to_column(summary_q2,"Author")
meta_q2.raw <- metacont(n_captive,mean_captive,sd_captive,n_wild,mean_wild,sd_wild,
data = meta_q2_ready,
studlab = paste(Author),
comb.fixed = FALSE,
comb.random = TRUE,
method.tau = "SJ",
hakn = TRUE,
prediction = TRUE,
sm = "SMD")
pdf(paste("~/reanalysis/Results/Diversity/",taxa,"/forest_q2",taxa,".pdf",sep=""),width=11, height=6)
forest(meta_q2.raw,col.diamond = "blue",sortvar=TE,col.diamond.lines = "black",text.random = "Overall effect",
rightlabs = c("g","95% CI","Weight"),leftlabs = c("Species", "N","Mean","SD","N","Mean","SD"),
lab.e = "Captivity",lab.c="Wild")
dev.off()
saveRDS(meta_q2.raw,paste("/Users/ostaizka/reanalysis/Results/Diversity/",taxa,"/meta_q2_",taxa,".RData",sep=""))
taxa = "Phylum"
#q=0
code
permanovaq0_results <- c()
permutesq0_results <- c()
for (code in code.list){
filtered.g <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
##Filter the hierarchy
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(filtered.g)),]
#Check whether both lists are identical
identical(sort(colnames(filtered.g)),sort(as.character(hierarchy[,1])))
##Filter the metadata
samples.kept <- colnames(filtered.g)
metadata.filtered <- metadata[rownames(metadata) %in% samples.kept,]
metadata.filtered1 <- tibble::rownames_to_column(metadata.filtered, "Code")
row.names(metadata.filtered1) <- metadata.filtered1$Datafiles
pairdis.q0 <- pair_dis(filtered.g,qvalue=0,hierarchy=hierarchy[,c(1,5)])
u0n <- pairdis.q0$L1_UqN
u0n.dist <- as.dist(u0n)
ps.disper.u0n.origin <- betadisper(u0n.dist, metadata.filtered1$Origin)
permutestq0 <- permutest(ps.disper.u0n.origin, pairwise = TRUE)
permutesq0_results <- append(permutesq0_results,permutestq0[1])
permanovaq0 <- adonis(u0n.dist ~ Origin, data =metadata.filtered1, permutations = 999)
print(code)
permanovaq0_results <- append(permanovaq0_results,permanovaq0[1])
}
names(permanovaq0_results) <- code.list
names(permutesq0_results) <- code.list
code
permanovaq0_results <- c()
permutesq0_results <- c()
filtered.g <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
##Filter the hierarchy
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(filtered.g)),]
#Check whether both lists are identical
identical(sort(colnames(filtered.g)),sort(as.character(hierarchy[,1])))
samples.kept <- colnames(filtered.g)
metadata.filtered <- metadata[rownames(metadata) %in% samples.kept,]
metadata.filtered1 <- tibble::rownames_to_column(metadata.filtered, "Code")
row.names(metadata.filtered1) <- metadata.filtered1$Datafiles
pairdis.q0 <- pair_dis(filtered.g,qvalue=0,hierarchy=hierarchy[,c(1,5)])
hierarchy[,c(1,5)]
View(filtered.g)
View(filtered.g)
taxa = "Genus"
permanovaq0_results <- c()
permutesq0_results <- c()
for (code in code.list){
filtered.g <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
##Filter the hierarchy
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(filtered.g)),]
#Check whether both lists are identical
identical(sort(colnames(filtered.g)),sort(as.character(hierarchy[,1])))
##Filter the metadata
samples.kept <- colnames(filtered.g)
metadata.filtered <- metadata[rownames(metadata) %in% samples.kept,]
metadata.filtered1 <- tibble::rownames_to_column(metadata.filtered, "Code")
row.names(metadata.filtered1) <- metadata.filtered1$Datafiles
pairdis.q0 <- pair_dis(filtered.g,qvalue=0,hierarchy=hierarchy[,c(1,5)])
u0n <- pairdis.q0$L1_UqN
u0n.dist <- as.dist(u0n)
ps.disper.u0n.origin <- betadisper(u0n.dist, metadata.filtered1$Origin)
permutestq0 <- permutest(ps.disper.u0n.origin, pairwise = TRUE)
permutesq0_results <- append(permutesq0_results,permutestq0[1])
permanovaq0 <- adonis(u0n.dist ~ Origin, data =metadata.filtered1, permutations = 999)
print(code)
permanovaq0_results <- append(permanovaq0_results,permanovaq0[1])
}
names(permanovaq0_results) <- code.list
names(permutesq0_results) <- code.list
#write.table(permanovaq0_results,"permanova_q0.tsv",quote = FALSE, sep=";")
#write.table(permutesq0_results,"permutest_q0.tsv",quote = FALSE, sep=";")
saveRDS(permanovaq0_results,paste("/Users/ostaizka/reanalysis/Results/Diversity/",taxa,"/permanova_q0_",taxa,".RData",sep=""))
saveRDS(permutesq0_results,paste("/Users/ostaizka/reanalysis/Results/Diversity/",taxa,"/permutest_q0_",taxa,".RData",sep=""))
permanovaq1_results <- c()
permutesq1_results <- c()
for (code in code.list){
filtered.g <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(filtered.g)),]
samples.kept <- colnames(filtered.g)
metadata.filtered <- metadata[rownames(metadata) %in% samples.kept,]
metadata.filtered1 <- tibble::rownames_to_column(metadata.filtered, "Code")
row.names(metadata.filtered1) <- metadata.filtered1$Datafiles
pairdis.q1 <- pair_dis(filtered.g,qvalue=1,hierarchy=hierarchy[,c(1,5)])
u1n <- pairdis.q1$L1_UqN
u1n.dist <- as.dist(u1n)
ps.disper.u1n.origin <- betadisper(u1n.dist, metadata.filtered1$Origin)
permutestq1 <- permutest(ps.disper.u1n.origin, pairwise = TRUE)
permutesq1_results <- append(permutesq1_results,permutestq1[1])
permanovaq1 <- adonis(u1n.dist ~ Origin, data =metadata.filtered1, permutations = 999)
permanovaq1_results <- append(permanovaq1_results,permanovaq1[1])
}
names(permanovaq1_results) <- code.list
names(permutesq1_results) <- code.list
saveRDS(permanovaq1_results,paste("/Users/ostaizka/reanalysis/Results/Diversity/",taxa,"/permanova_q1_",taxa,".RData",sep=""))
saveRDS(permutesq1_results,paste("/Users/ostaizka/reanalysis/Results/Diversity/",taxa,"/permutest_q1_",taxa,".RData",sep=""))
permanovaq1_results
View(hierarchy_all)
taxa = "Genus"
summary_all_q0 <- c()
code
final.table <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(final.table)),]
head(hierarchy)
divq0 <- div_test(final.table,qvalue=0,hierarchy=hierarchy[,c(1,5)])
divq0_table <- divq0$data
divq0_table
divq0_all <- divq0$data
n_all <- nrow(divq0_all)
mean_all <- mean(divq0_wild[,c("Value")])
sd_all <- sd(divq0_all[,c("Value")])
summary_all_q0 <- rbind(summary_all_q0,c(n_all,mean_all,sd_all))
summary_all_q0
taxa
taxa = "Genus"
summary_all_q0 <- c()
for (code in code.list){
final.table <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(final.table)),]
divq0 <- div_test(final.table,qvalue=0,hierarchy=hierarchy[,c(1,5)])
divq0_all <- divq0$data
n_all <- nrow(divq0_all)
mean_all <- mean(divq0_wild[,c("Value")])
sd_all <- sd(divq0_all[,c("Value")])
summary_all_q0 <- rbind(summary_all_q0,c(n_all,mean_all,sd_all))
}
summary_all_q0
taxa = "Genus"
summary_all_q0 <- c()
for (code in code.list){
final.table <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(final.table)),]
divq0 <- div_test(final.table,qvalue=0,hierarchy=hierarchy[,c(1,5)])
divq0_all <- divq0$data
n_all <- nrow(divq0_all)
mean_all <- mean(divq0_all[,c("Value")])
sd_all <- sd(divq0_all[,c("Value")])
summary_all_q0 <- rbind(summary_all_q0,c(n_all,mean_all,sd_all))
}
summary_all_q0
colnames(summary_all_q0) <- c("N", "Mean", "SD")
rownames(summary_all_q0) <- code.list
summary_all_q0
write.table(summary_all_q0, paste("~/reanalysis/Results/Diversity/",taxa,"/all_summaryq0_",taxa,".tsv",sep=""))
taxa = "Genus"
summary_all_q1 <- c()
for (code in code.list){
final.table <- read.table(paste("/Users/ostaizka/reanalysis/table/countfiltered_",taxa,"_",code,".tsv",sep=""))
hierarchy <- hierarchy_all[which(hierarchy_all[,1] %in% colnames(final.table)),]
divq1 <- div_test(final.table,qvalue=1,hierarchy=hierarchy[,c(1,5)])
divq1_all <- divq1$data
n_all <- nrow(divq1_all)
mean_all <- mean(divq1_all[,c("Value")])
sd_all <- sd(divq1_all[,c("Value")])
summary_all_q1 <- rbind(summary_all_q1,c(n_all,mean_all,sd_all))
}
colnames(summary_all_q1) <- c("N", "Mean", "SD")
rownames(summary_all_q1) <- code.list
write.table(summary_all_q1, paste("~/reanalysis/Results/Diversity/",taxa,"/all_summaryq1_",taxa,".tsv",sep=""))
summary_all_q1
load("/Users/ostaizka/reanalysis/Results/Diversity/Genus/permanova_q0_Genus.RData")
permanova_q0_Genus <- readRDS("~/reanalysis/Results/Diversity/Genus/permanova_q0_Genus.RData")
permanova_q0_Genus
summary_q1
s <- div_part(final.table,qvalue=0,hierarchy=hierarchy)
View(final.table)
head(hierarchy)
final.table.t <- as.data.frame(t(as.matrix(final.table)))
View(final.table.t)
View(final.table.t)
s <- div_part(final.table.t,qvalue=0,hierarchy=hierarchy)
View(hierarchy)
s <- div_part(final.table.t,qvalue=0,hierarchy=hierarchy[1,5])
s <- div_part(final.table.t,qvalue=0,hierarchy=hierarchy[,c(1,5)])
head(hierarchy[,c(1,5)])
hierarchy[,c(1,5)]
nrow(hierarchy[,c(1,5)])
ncol(final.table.t)
head(final.table.t)
s <- div_part(final.table,qvalue=0,hierarchy=hierarchy[,c(1,5)])
s
save.image("~/reanalysis/Species/last_Tests.RData")
